input {
    kafka {
        bootstrap_servers => "${MASKER_INPUT_BROKERS}"
    topics => ["${MASKER_INPUT_TOPIC}"]
    security_protocol => "SSL"
    ssl_truststore_location => "/home/ubuntu/kafka.client.truststore.jks"
    group_id => "${MASKER_CONSUMER_GROUP_ID}"
        consumer_threads => "${MASKER_CONSUMER_THREADS}"
    auto_offset_reset => "earliest"
  }
}

filter {
    mutate {
        gsub => [
            "[message][message]", "([a-zA-Z0-9_.+-]{1,4})[a-zA-Z0-9_.+-]*@([a-zA-Z0-9-]+)\.[a-zA-Z0-9-.]*([a-zA-Z0-9-.]{3})|(live|test)_(__dev__)?[a-zA-Z0-9]*([a-zA-Z0-9-.]{3})|\(?([+][0-9]{1,2})?\)?(\(?\d{3}\)?)[\s.-]?\d{3}[\s.-]?\d{4}", "\1\4\8xxxxxx\3\6"
        ]
    }
}
output {
    kafka {
    bootstrap_servers => "${MASKER_OUTPUT_BROKERS}"
        topic_id => "${MASKER_OUTPUT_TOPIC}"
    security_protocol => "SSL"
    codec => line { format => "%{message}" }
        ssl_truststore_location => "/home/ubuntu/kafka.client.truststore.jks"
    client_id => "maskerOutputKafka"
    compression_type => "snappy"
        linger_ms => 5
        acks => "1"
    }
}